groups:
  - id: vcs
    type: attribute_group
    brief: >
      Attributes describing version control systems (VCS).
    attributes:
      - id: vcs.change.id
        type: string
        stability: experimental
        brief: >
          The identifier of the change, for example, pull request ID or merge request ID.
          It is typically unique per repository and generated by the version control system itself.
        examples: [ '1234' ]
      - id: vcs.change.state
        type:
          allow_custom_values: true
          members:
            - id: open
              value: 'open'
              brief: 'The change is open and ready for review or currently under review. It has not been merged yet, and changes are still possible.'
            - id: merged
              value: 'merged'
              brief: 'The change has successfully been merged into the target code base.'
            - id: closed
              value: 'closed'
              brief: 'The change was closed without being merged into the target code base.'
            - id: wip
              value: 'wip'
              brief: 'The change is still a work in progress and not yet ready for review.'
            - id: reopened
              value: 'reopened'
              brief: 'The change was re-opened after being `closed` and is ready for review again.'
        stability: experimental
        brief: >
          The state of the change, for example, the state of a pull request or merge request.
        examples: [ 'wip', 'open', 'reopened', 'closed', 'merged' ]
      - id: vcs.change.title
        type: string
        stability: experimental
        brief: >
          The human-readable title of the change, for example, pull request title or merge request title.
        examples: [ 'CA-1234: Fix some stuff', '[chore] update dependency' ]
      - id: vcs.change.url.full
        type: string
        stability: experimental
        brief: >
          The full URL to the change, for example, the full URL to the pull request or merge request.
        examples: [ 'https://github.com/dynatrace-oss/terraform-provider-dynatrace/pull/20' ]
      - id: vcs.line_change.type
        type:
          allow_custom_values: true
          members:
            - id: added
              value: 'added'
              brief: 'How many lines were added.'
            - id: removed
              value: 'removed'
              brief: 'How many lines were removed.'
        stability: experimental
        brief: >
          The type of line change being measured on a branch or change.
        examples: [ 'added', 'removed' ]
      - id: vcs.ref.base.name
        type: string
        stability: experimental
        brief: >
          The name of the reference in the repository. This can be a branch name or a tag name.
        note: |
          The base name refers to the starting point of a change. For example, if a feature branch was created from `main`,
          `main` is the base reference of type `branch`.
        examples: [ 'my-branch-name' ]
      - id: vcs.ref.base.revision
        type: string
        stability: experimental
        brief: >
          The revision in the repository. For Git this is a synonym for a commit hash, whereas in SVN it is a revision number.
        note: |
          The base revision refers to the starting revision of a change. For example, if a branch was created from a certain
          commit, this commit is the base revision.
        examples: [ 'd4322ab6cba38d21ad83c9de304a6a214ecf2cdc', 'main', '1337' ]
      - id: vcs.ref.base.type
        type:
          allow_custom_values: true
          members:
            - id: branch
              value: 'branch'
              brief: 'The base reference type is a branch.'
            - id: tag
              value: 'tag'
              brief: 'The base reference type is a tag.'
        stability: experimental
        brief: >
          The reference type in the repository.
        note: |
          The base type refers to the reference type of the starting point of a change. For example,
          if a feature branch was created from the `main` branch, `branch` is the base reference's type.
        examples: [ 'branch', 'tag' ]
      - id: vcs.ref.head.name
        type: string
        stability: experimental
        brief: >
          The name of the reference in the repository. This can be a branch name or a tag name.
        note: |
          The head name refers to the current reference's name. For example,
          if `main` is currently checked out, the head name is `main`.
        examples: [ 'my-branch-name' ]
      - id: vcs.ref.head.revision
        type: string
        stability: experimental
        brief: >
          The revision in the repository. For Git, this is a synonym for a commit hash, whereas in SVN, it is a revision number.
        note: |
          The head revision refers to the currently referenced revision.
        examples: [ 'd4322ab6cba38d21ad83c9de304a6a214ecf2cdc', 'main', '1337' ]
      - id: vcs.ref.head.type
        type:
          allow_custom_values: true
          members:
            - id: branch
              value: 'branch'
              brief: 'The head reference type is a branch.'
            - id: tag
              value: 'tag'
              brief: 'The head reference type is a tag.'
        stability: experimental
        brief: >
          The reference type in the repository.
        note: |
          The head type refers to the currently referenced type in the repository. For example,
          if the `main` branch is currently checked out, the head reference is of type `branch`.
        examples: [ 'branch', 'tag' ]
      - id: vcs.ref.type
        type:
          allow_custom_values: true
          members:
            - id: branch
              value: 'branch'
              brief: 'The reference type is a branch.'
            - id: tag
              value: 'tag'
              brief: 'The reference type is a tag.'
        stability: experimental
        brief: >
          The reference type in the repository.
        examples: [ 'branch', 'tag' ]
      - id: vcs.repository.name
        type: string
        stability: experimental
        brief: >
          The human-readable name of the repository. It should not include any additional identifiers like GitLab group or GitHub organization.
        note: |
          Be aware that the repository name might clash with forked repositories.
        examples: [ 'dynatrace-configuration-as-code' ]
      - id: vcs.repository.url.full
        type: string
        stability: experimental
        brief: >
          The repository's full URL.
        examples: [ 'https://github.com/dynatrace-oss/terraform-provider-dynatrace' ]
        note: |
          For Git VCS, this should not include the `.git` URL suffix.
      - id: vcs.revision_delta.direction
        type:
          allow_custom_values: true
          members:
            - id: ahead
              value: 'ahead'
              brief: 'How many revisions the change is ahead of the target ref.'
            - id: befind
              value: 'behind'
              brief: 'How many revisions the change is behind of the target ref.'
        stability: experimental
        brief: >
          The type of revision comparison.
        examples: [ 'ahead', 'behind' ]
