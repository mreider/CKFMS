groups:
  - id: dt.rum
    type: attribute_group
    brief: >
      The dt.rum namespace contains Dynatrace RUM specific fields.
    attributes:

# stable (because of BIZ events)

      - id: dt.rum.session.id
        type: string
        stability: stable
        brief: >
          A unique ID that represents the user session.
        examples: [ 'HOPCPWKILUKHFHWRRQGBHHPAFLUJUOSH-0', '23626166142035610_1-0' ]

      - id: dt.rum.application.id
        type: string
        stability: stable
        brief: >
          The Dynatrace RUM application ID. For mobile applications, a UUID is used. For web applications, an 8-byte HEX string is used.
        examples: [ 'ea7c4b59f27d43eb', '89b1a1e7-fe89-4151-81e9-410fa0235f0d' ]

# experimental

      - id: dt.rum.browser.session_id
        type: string
        stability: experimental
        brief: >
          The browser session ID, taken from the dtCookie value. Not applicable for OneAgent for Mobile.
        examples: [ '4D3133F359A76AB05AAF39691696858A' ]

      - id: dt.rum.application.entity
        type: string
        stability: experimental
        tags: [ 'entity-id' ]
        brief: >
          An entity ID of an entity of type APPLICATION or MOBILE_APPLICATION.
        examples: [ 'APPLICATION-DC92E74A7A844E6E', 'MOBILE_APPLICATION-E8A8751A60D5BCE8' ]

      - id: dt.rum.user_tag
        type: string
        stability: experimental
        brief: >
          The user tag.
        examples: [ 'john.doe@dynatrace.com' ]

# internal / currently not used

      - id: dt.rum.adk
        type: string
        internal: true
        stability: experimental
        brief: >
          The value of the dtAdk cookie.
        examples: [ '12345678_42-1_My-App-UUID_m' ]

# deprecated, should be cleaned up when possible
      - id: dt.rum.has_nfn_values
        type: boolean
        internal: true
        deprecated: Replaced with `supportability.has_nfn_values` for user events, used for 2nd gen BIZ events but undocumented.
        brief: If set to `true`, the original event contained non-finite numeric values (NaN, +Inf, -Inf), that were replaced with `null` by Dynatrace RUM.
        examples: [ true ]

      - id: dt.rum.api.has_enrich_exception
        type: boolean
        internal: true
        deprecated: Replaced with `supportability.api.has_enrich_exception`.
        brief: If set to `true`, customer code threw an exception while using the Dynatrace API. The exception was caught and handled by Dynatrace RUM.
        examples: [ true ]

      - id: dt.rum.api.has_dropped_fields
        type: boolean
        internal: true
        deprecated: Replaced with `supportability.api.has_dropped_custom_properties`.
        brief: If set to `true`, the Dynatrace RUM agent dropped custom fields that were added via the Dynatrace API.
        examples: [ true ]

      - id: dt.rum.overridden_keys
        type: string[]
        internal: true
        deprecated: Replaced with `supportability.api.overridden_fields`.
        brief: A list of keys that have been defined or overridden by the customer, and which do not hold the original value.
        examples: [ 'url.full', 'exception.stack_trace' ]

      - id: dt.rum.dropped_properties
        type: string[]
        internal: true
        deprecated: Replaced with `supportability.dropped_custom_properties`.
        brief: A list of keys of custom fields that have been dropped.
        examples: [ 'event_properties.property1', 'event_properties.property2' ]

      - id: dt.rum.exception.is_stack_trace_generated
        type: boolean
        internal: true
        deprecated: Replaced with `exception.is_stack_trace_generated`.
        brief: If `true`, the captured stack trace was generated by RUM JavaScript. Only available if the event contains a stack trace.
        examples: [ false ]

      - id: dt.rum.exception.is_stack_trace_wrapped
        type: boolean
        internal: true
        deprecated: Replaced with `exception.is_stack_trace_wrapped`.
        brief: If `true`, RUM JavaScript wrapped the method that caused the exception. Only available if the event contains a stack trace.
        examples: [ false ]

      - id: dt.rum.performance.incomplete_reason
        type: string
        internal: true
        deprecated: Replaced with `performance.incomplete_reason`.
        brief: Gives additional information why W3C resource timings are missing for the request.
        examples: [ 'not detected' ]

      - id: dt.rum.csp.stack_trace
        type: string
        internal: true
        deprecated: Replaced with `csp.stack_trace`.
        brief: Stack trace collected by RUM JavaScript for the CSP rule violation by firing an exception.
        examples: [ '@https://www.foo.bar/path/main.js:59:26 e@https://www.foo.bar/path/lib/1.1/lib.js:2:30315' ]

      - id: dt.rum.has_enrich_api_exception
        type: boolean
        internal: true
        stability: deprecated
        brief: >
          (replaced with `dt.rum.api.has_enrich_exception`). If `true`, customer code within the Dynatrace API has thrown an exception that was caught by Dynatrace RUM. May be omitted if `false`.
        examples: [ true ]

      - id: dt.rum.frame_id
        type: uid
        internal: true
        deprecated: Replaced with `browser.frame.id`.
        brief: A unique ID generated by RUM JavaScript to identify the browser frame.
        examples: [ 'f76281848bd8288c' ]

      - id: dt.rum.parent_frame_id
        type: uid
        internal: true
        deprecated: Replaced with `browser.frame.parent_id`.
        brief: A unique ID generated by RUM JavaScript to identify the browser's next-higher frame (if that frame exists and is reachable).
        examples: [ 'f76281848bd8288c' ]

      - id: dt.rum.tab_id
        type: uid
        internal: true
        deprecated: Replaced with `browser.tab.id`.
        brief: A unique ID generated by RUM JavaScript to identify the browser tab.
        examples: [ 'f76281848bd8288c' ]

      - id: dt.rum.trace_context_hint
        type: string
        internal: true
        deprecated: Replaced with `request.trace_context_hint`.
        brief: Indicates if and why RUM JavaScript set the W3C Trace Context headers on the request.
        examples: [ 'excluded' ]
